/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package TheStreetLablel.ui;

import TheStreetLablel.controller.AccountController;
import TheStreetLablel.dao.AccountDAO;
import TheStreetLablel.dao.impl.AccounDAOImpl;
import TheStreetLablel.model.taikhoan.Model_Account;

import TheStreetLablel.util.XDialog;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.View;

/**
 *
 * @author Admin
 */
public class TaiKhoan1 extends javax.swing.JPanel implements AccountController {
    AccountDAO dao = new AccounDAOImpl();
    List<Model_Account> items =  List.of();
    /**
     * Creates new form TaiKhoan
     */
    public TaiKhoan1() {
        initComponents();
        fillToTable();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIdAccount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        btnDeleteAccount = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccount = new javax.swing.JTable();
        btnInsertAccount = new javax.swing.JButton();
        btnUpdateAccount = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtIdStaff = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Quản lý tài khoản");

        jLabel2.setText("ID Account");

        txtIdAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdAccountActionPerformed(evt);
            }
        });

        jLabel3.setText("UserName");

        btnDeleteAccount.setText("Xóa tài khoản");
        btnDeleteAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAccountActionPerformed(evt);
            }
        });

        tblAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Account", "Username", "Password", "ID Staff"
            }
        ));
        tblAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAccountMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAccount);

        btnInsertAccount.setText("Thêm tài khoản");
        btnInsertAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertAccountActionPerformed(evt);
            }
        });

        btnUpdateAccount.setText("Sửa tài khoản");
        btnUpdateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAccountActionPerformed(evt);
            }
        });

        jLabel4.setText("ID Staff");

        jLabel5.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIdAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIdStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnInsertAccount)
                                .addGap(39, 39, 39)
                                .addComponent(btnUpdateAccount)
                                .addGap(44, 44, 44)
                                .addComponent(btnDeleteAccount))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(446, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtIdStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsertAccount)
                    .addComponent(btnUpdateAccount)
                    .addComponent(btnDeleteAccount))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdAccountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdAccountActionPerformed

    private void btnInsertAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertAccountActionPerformed
        this.create();
    }//GEN-LAST:event_btnInsertAccountActionPerformed

    private void btnUpdateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAccountActionPerformed
        this.update();
    }//GEN-LAST:event_btnUpdateAccountActionPerformed

    private void btnDeleteAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAccountActionPerformed
        this.delete();
    }//GEN-LAST:event_btnDeleteAccountActionPerformed

    private void tblAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAccountMouseClicked
        Model_Account selectedItem = dao.findAll().get(tblAccount.getSelectedRow());
        txtIdAccount.setText(selectedItem.getMaTaiKhoan());
        txtUsername.setText(selectedItem.getUsername());
        txtPassword.setText(selectedItem.getPassword());
        txtIdStaff.setText(selectedItem.getMaNhanVien());
    }//GEN-LAST:event_tblAccountMouseClicked

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteAccount;
    private javax.swing.JButton btnInsertAccount;
    private javax.swing.JButton btnUpdateAccount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAccount;
    private javax.swing.JTextField txtIdAccount;
    private javax.swing.JTextField txtIdStaff;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables


//
//    @Override
//    public void SetForm(Model_Account entity) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }
//
//    @Override
//    public Model_Account GetForm() {
//        String MaTaiKhoan = txtIdAccount.getText();
//        String Usernam = txtUsername.getText();
//        String Password = txtPassword.getText();
//        String MaNhanVien = txtIdStaff.getText();
//        
//     return new Model_Account(MaTaiKhoan, Usernam, Password, MaNhanVien);
//    }


//    @Override
//    public void Clear() {
//        txtIdAccount.setText(" ");
//        txtUsername.setText(" ");
//        txtPassword.setText(" ");
//        txtIdStaff.setText(" ");
//        tblAccount.clearSelection();
//    }

    @Override
    public void open() {
       
    }

    @Override
    public void fillToTable() {
            DefaultTableModel dtm = (DefaultTableModel) tblAccount.getModel();
    dtm.setRowCount(0);
//    items = dao.findAll();
        for (Model_Account item : dao.findAll()) {
            Object[] values= {
            item.getMaTaiKhoan(),
            item.getUsername(),
            item.getPassword(),
            item.getMaNhanVien()
        };
            dtm.addRow(values);
        }
    }

    @Override
    public void create() {
               int chon = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm không?");
        if(chon == JOptionPane.YES_OPTION){
        Model_Account acc = this.getForm();
        dao.create(acc);
        XDialog.alert("Thêm thành công!");
        this.fillToTable();

    }
    }

    @Override
    public void update() {
                int chon = JOptionPane.showConfirmDialog(this, "Bạn có muốn sửa không?");
        if(chon == JOptionPane.YES_OPTION){
        Model_Account acc = this.getForm();
        dao.update(acc);
        XDialog.alert("Sửa thành công!");
        this.fillToTable();

    }
    }

    @Override
    public void delete() {
               if(XDialog.confirm("Bạn có chắc muốn xóa không?")){
            String idxoa = txtIdAccount.getText();
            dao.deleteById(idxoa);
            XDialog.alert("Xóa thành công!");
            this.fillToTable();

        }
    }

    @Override
    public Model_Account getForm() {
         String MaTaiKhoan = txtIdAccount.getText();
        String Usernam = txtUsername.getText();
        String Password = txtPassword.getText();
        String MaNhanVien = txtIdStaff.getText();
        
     return new Model_Account(MaTaiKhoan, Usernam, Password, MaNhanVien);
    }
}
